{"name":"NTLoop","body":"NTLoop\r\n======\r\n\r\nSimple implementation of abstract game loop using CADisplayLink technique.\r\n\r\nDescription\r\n===========\r\n\r\nThe NTLoop class provides part of the standard view controller functionality, it implements loop using CADisplayLink (TODO: add NSTimer for compatibility with old devices). \r\nA NTLoop object usually works in conjunction with a view object to display frames of animation in the view or to update application logic using time interval since last update.\r\n\r\nTo use this class, allocate and initialize a new NTLoop subclass with frame intrerval (1 means 60 frames per second, 2 means 30 frames per second and so on) using update block object or set its delegate. \r\nYou can set a delegate or configure other properties on the view controller, such as whether the loop is automatically paused or resumed when the application moves into the background.\r\n\r\nWhen active, loop automatically updates application data using time interval since last update.\r\nThe view controller calls its delegateâ€™s ntLoopUpdate: method. If you use delegate then your delegate should update data that does not involve rendering the results to the screen.\r\n\r\nSimple installation\r\n===================\r\n\r\n1. Clone repository\r\n2. Drag files to your project and choose option \"Copy items into destination group's folder (if needed)\"\r\n3. Link against QuartzCore framework (Click on your project at navigator panel, choose your build target, go to \"Build Phases\" tab, then \"Link binary with libraries\" and add \"QuartzCore.framework\")\r\n4. Import `NTLoop.h` header to your project and build!\r\n\r\nAdvanced installation\r\n=====================\r\n\r\nInstall as a submodule\r\n----------------------\r\n\r\nIt's better to install NTLoop as a git submodule\r\n\r\n1. `cd` to existing project's git repository\r\n2. `git submodule add git@github.com:nt9/NTLoop.git NTLoop`\r\n3. `git submodule status`\r\n4. `git submodule update`\r\n5. Drag files to your project and DO NOT choose option \"Copy items into destination group's folder (if needed)\"\r\n6. Link against QuartzCore framework (Click on your project at navigator panel, choose your build target, go to \"Build Phases\" tab, then \"Link binary with libraries\" and add \"QuartzCore.framework\")\r\n7. Import `NTLoop.h` header to your project and build!\r\n8. Commit changes.\r\n\r\nTo update git submodule\r\n-----------------------\r\n\r\n1. `cd` to existing project's git repository\r\n2. `cd NTLoop`\r\n3. `git checkout master`\r\n4. `git pull origin master`\r\n5. `cd ..`\r\n6. `git add NTLoop`\r\n7. `git commit -m 'Updated NTLoop to latest version'`\r\n\r\n\r\nSample usage\r\n============\r\n\r\nAdd to your `AppDelegate.m`\r\n\r\n    #import \"NTLoop.h\"\r\n    @interface AppDelegate()\r\n\r\n    @property (strong, nonatomic) NTLoop *gameLoop;\r\n\r\n    @end\r\n\r\n\r\n    @implementation AppDelegate\r\n\r\n    @synthesize gameLoop;\r\n\r\n    - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\r\n    {\r\n        self.gameLoop = [[NTLoop alloc] initWithFrameInterval:1.0 usingBlock:^(NSTimeInterval timeSinceLastUpdate) {\r\n            NSLog(@\"Wow this is so simple!\");\r\n        }];\r\n        return YES;\r\n    }\r\n\r\n    @end\r\n\r\n\r\nCommon pitfalls\r\n==============\r\n\r\nIf you are getting error report like this one, you should link agains QuartzCore framework as described in Installation sections\r\n\r\n    Undefined symbols for architecture i386:\r\n        \"_CACurrentMediaTime\", referenced from:\r\n            -[NTLoop timeSinceLastUpdate] in NTLoop.o\r\n                \"_OBJC_CLASS_$_CADisplayLink\", referenced from:\r\n                objc-class-ref in NTLoop.o\r\n                ld: symbol(s) not found for architecture i386\r\n                clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n\r\n\r\n\r\nLicense\r\n=======\r\n\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","tagline":"Good candidate for you next generation FPS game loop.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}